It is an inplace sorting algorithm
It requires no extra space;
average case time ciomplexity is nlog(n)

int pivot (int arr[], int low, int high) 
{ 
    int pivot = arr[high]; // pivot 
    int i = (low - 1); // Index of smaller element and indicates the right position of pivot found so far
  
    for (int j = low; j <= high - 1; j++) 
    { 
        // If current element is smaller than the pivot 
        if (arr[j] < pivot) 
        { 
            i++; // increment index of smaller element 
            swap(&arr[i], &arr[j]); 
        } 
    } 
    swap(&arr[i + 1], &arr[high]); 
    return (i + 1); 
} 

void divide(int arr[], int left, int right){
ig(left<right){
int p = pivot(arr,left, right);
divide(left,p-1)
divide(p+1,right);
}

}

int main(){

int arr[] = {2,4,5,6,39);
divide(arr,0,n);
}
